// CSS TRICK - part 2
//  This trick works by making use if the change state
// of the input tyoe radio and the next sibling CSS selector "+"
// Example:
  // This will target all unchecked input elements with class .my-input
  // .my-input {margin-left: 10px;}
  // This will target all checked inputs elements with class .my-inpit
  // .my-input:checked{margin-left:20px;}
// input tyoe radio elements can be grouped by using
// the name attribute with the same value, this ensuring
// only one input can be checked at one time
// HTML example of an input and its sibling
  // <input type+"radio" id="myCustomUniqueId" />
  // <p>Label text</p>
  // #myCustomUniqueId:checked + p {color:blue}
// The example above will mae the text content inside the paragraph
// tag of colo blue when the input #myCustomUniqueId is checked.

// Summary:
// 1. The label linked to the input changes the state of
// the input when clicked
// 2. The next siblin of the input can be targeted with
// different CSS rules base on the checked stateof


$class: 'home-message';

.#{class}-radio .#{$class}{
  // Hide all .home-message that follow as sibling
  // an input type radio with checked state as false
  display: none;
}

#message-default.#{$class}-radio:checked .#{$class} .#{class}-box-header {
  // Hide all .home-message that follow as sibling
  // an input type radio with checked state false
  display: none;
}
.#{$class}-radio:checked .#{$class}{
  // Change display state of the .home-message from
  // hidden to show based on the checked state true
  // of the input type radio
  padding: 0.8rem;
  // and enough space on top it away from social box
  margin-top: 0.5rem;
  // Set the position to relative so the child(ren) that have
  // position: absolute will bound to this container
  position: relative;
}

// Hide the input type radio elements to clean interface
input.#{$class}-radio[type=radio]{
  display: none;
}

// Create a rounder corners rectangle
.#{$class}-body {
  // that doesn't break on new line
  display: inline-block;
  // with white border
  border:0.2rem solid $color-white;
  // that rounds the corners
  border-radius: 0.5rem;
  // and enough clear space between border and text content
  padding: 0,8rem;
  // and enough space on top of it away from social box
  margin-top: 0.5rem;
}
// Hide the input tyoe radio elements
.#{$class}-link,
.#{$class}-link:visited{
  font-size: 1.4rem;
  // remove the defaukt underline present in anchor tads
  text-decoration: none;
  color: $color-white;
}
// Make use os position: relative and position: absolute CSS trick
// This box will look the first parent that has position relative
// or absolute and be bound to it. It'll look from the first parent,
// going up until it reaches the body. If none is found it stops at body.
// Once it finds it, its top, bottom, left and right will be influenced
// by the box of the parent it found and binded to it.
// imagine this box:
// -----------------------------------------------------
// |     <div style="position: absolute"></div>        |
// -----------------------------------------------------
// The div inside the box will be traped inside those borders
// unles negative top, bottom, left or right will be specified.
.#{$class}-box-header{
  // This position absolute goef hand in hand with position relative
  // of the first found parent
  position: absolute;
  // and the width is set to 80% of the parent container
  // 100% - 10% - 10% = 80%
  left: 10%;
  right: 10%;
  // and it'll be positioned starting at the bottom of the parent container
  // since top: 100% will move it away from the top and towards the bottom
  // by 100% height of the parent.
  top: 100%;
  // Display flrs will make the content behave like inline elements
  display: flex;
  // and set the corners to be reounded, just the bottom left and right ones.
  border-bottom-left-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

.#{$class}-box-close,
.#{$class}-box-info{
  @extend %noselect;
  // set some distance between text and borders
  // to meke the text more readable
  padding: 0.4rem;
  // and set the background to white
  background-color: $color-white;
}

.#{class}-box-info {
  // strech this box to the availeble width
  width:100%;
  // and set the bottom left corner to be reounder
  border-bottom-left-radius: 0.4rem;

  // and don't allow text to break on new line
  white-space: nowrap;
  // and hide the text that flows outside the available width
  overflow-x: hidden;
  // and display three dots to let the user know there is more hidden conent
  text-overflow: ellipsis;
}
.#{$class}-box {
  margin-bottom: 3rem;
}

.#{$class}-box-close {
  border-bottom-right-radius: 0.4rem;
  cursor: pointer;

}
